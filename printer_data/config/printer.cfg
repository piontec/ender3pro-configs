[include fluidd.cfg]

[include macros.cfg]
# This file contains pin mappings for the stock 2020 Creality Ender 3
# Pro with the 32-bit Creality 4.2.2 board. To use this config, during
# "make menuconfig" select the STM32F103 with a "28KiB bootloader" and
# serial (on USART1 PA10/PA9) communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PC0
dir_pin: PB2
enable_pin: !PC13
microsteps: 128
rotation_distance: 40
endstop_pin: ^PA12
position_endstop: -5
position_min: -5
position_max: 230
homing_speed: 50

[stepper_y]
step_pin: PC2
dir_pin: PB9
enable_pin: !PB12
microsteps: 128
rotation_distance: 40
endstop_pin: ^PA11
position_endstop: -3
position_min: -3
position_max: 230
homing_speed: 50

[stepper_z]
step_pin: PC14
dir_pin: !PC15
enable_pin: !PB8
microsteps: 128
rotation_distance: 8
#endstop_pin: ^PC6
#position_endstop: 0
endstop_pin: probe:z_virtual_endstop
position_min: -3
position_max: 250


[extruder]
max_extrude_cross_section: 1.2
max_extrude_only_distance: 100.0
step_pin: PB4
dir_pin: PB3
enable_pin: !PB5
microsteps: 128
#rotation_distance: 30.9174
#rotation_distance: 23.6919
#rotation_distance: 23.313
rotation_distance: 23.126
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC9
#sensor_type: EPCOS 100K B57560G104F
sensor_type: PT1000
sensor_pin: PA0
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
#max_temp: 260
max_temp: 300
# 0.4 nozzle
pressure_advance: 0.03
# 0.8 nozzle
#pressure_advance: 0.06
gear_ratio: 3:1

[tmc2209 stepper_x]
uart_pin: PC7
run_current: 0.700
interpolate: False
#stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PD2
run_current: 0.700
interpolate: False
#stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PC12
run_current: 0.600
interpolate: False
#stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PC11
run_current: 0.450
interpolate: False
#stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
#control: pid
# tuned for stock hardware with 50 degree Celsius target
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA8

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 1500
max_z_velocity: 5
max_z_accel: 100

[idle_timeout]
timeout: 1800

#[output_pin probe_enable]
#pin: PC4
#value: 0
#
#[gcode_macro Probe_Deploy]
#gcode:
# SET_PIN PIN=probe_enable VALUE=1
#
#[gcode_macro Probe_Stow]
#gcode:
# SET_PIN PIN=probe_enable VALUE=0
#
#[probe]
#pin: ^!PC10 # For V1 version, set to ^PC13 for high-level trigger; for V2 version, set to ^!PC13 for low-level trigger.
#deactivate_on_each_sample: False
#x_offset: 25
#y_offset: 7.5
##z_offset: -1.0
#speed: 2.0
#samples: 3
#samples_result: average
#samples_tolerance: 0.02
#samples_tolerance_retries: 3
#activate_gcode:
# Probe_Deploy
# G4 P500 # Allow 500 milliseconds for the probe to deploy
#deactivate_gcode:
# Probe_Stow

# The MCU section only applies to the Eddy USB. For Eddy Coil you will use the MCU name of the toolboard that you connected the Eddy Coil to.
[mcu eddy]
serial: /dev/serial/by-id/usb-Klipper_rp2040_5044506128883C1C-if00
restart_method: command

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu # Sets the type of sensor for Klipper to read
sensor_mcu: eddy # Sets the MCU of the eddy probe tempereature sensor
min_temp: 10 # Sets the minimum tempereature for eddys tempereature sensor to operate
max_temp: 100 # Sets the maximum tempereature for eddys tempereature sensor to operate

[probe_eddy_current btt_eddy]
sensor_type: ldc1612
z_offset: 0.5
#i2c_address:
i2c_mcu: eddy  # This value is good for the Eddy USB but would need to be adjusted for the Eddy Coil according to the MCU you have used.
i2c_bus: i2c0f # This value is good for the Eddy USB but would need to be adjusted for the Eddy Coil according to the I2C bus you have used.
# Measure the offsets below using the method described here: https://www.klipper3d.org/Probe_Calibrate.html#calibrating-probe-x-and-y-offsets
# For a standard Voron stealthburner X carriage mount there should be no need to change the defaults below.
x_offset: 0
y_offset: 21.42

# This section is only relevant for Eddy USB. Comment it out for Eddy Coil.
[temperature_probe btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26
horizontal_move_z: 2


###############################Macros and related################################
#This secton contains macros and related config sections. Some should be used, others are optional. Read the comment above each one to find out whether or not to uncomment it for your installation.

# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
#[save_variables]
#filename: ~/printer_data/config/variables.cfg

# Uncomment this if you are using Eddy as the probe AND the homing endstop
[force_move]
enable_force_move: True # Allows a user to move the z axis down if they have no other means of homing Z and need to calibrate the Eddy.

# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
#[delayed_gcode RESTORE_PROBE_OFFSET]
#initial_duration: 1.
#gcode:
#  {% set svv = printer.save_variables.variables %}
#  {% if not printer["gcode_macro SET_GCODE_OFFSET"].restored %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ svv.nvm_offset|default(0) }
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=restored VALUE=True
#  {% endif %}

# Uncomment this if you are using Eddy as the probe AND the homing endstop
# Take note of the lines that should only be used if you have a KNOMI installed.
[gcode_macro G28]
rename_existing: G28.1
gcode:
  #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg
  G28.1 {rawparams}
  {% if not rawparams or (rawparams and 'Z' in rawparams) %}
    PROBE
    SET_Z_FROM_PROBE
  {% endif %}
  #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
[gcode_macro SET_Z_FROM_PROBE]
gcode:
    {% set cf = printer.configfile.settings %}
    SET_GCODE_OFFSET_ORIG Z={printer.probe.last_z_result - cf['probe_eddy_current btt_eddy'].z_offset + printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset}
    G90
    G1 Z{cf.safe_z_home.z_hop}


# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
#[gcode_macro Z_OFFSET_APPLY_PROBE]
#rename_existing: Z_OFFSET_APPLY_PROBE_ORIG
#gcode:
#  SAVE_VARIABLE VARIABLE=nvm_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset }



# Uncomment the lines in this macro if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro SET_GCODE_OFFSET]
rename_existing: SET_GCODE_OFFSET_ORIG
variable_restored: False  # Mark whether the var has been restored from NVM
variable_runtime_offset: 0
gcode:
#  {% if params.Z_ADJUST %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
#  {% endif %}
#  {% if params.Z %}
#    {% set paramList = rawparams.split() %}
#    {% for i in range(paramList|length) %}
#      {% if paramList[i]=="Z=0" %}
#        {% set temp=paramList.pop(i) %}
#        {% set temp="Z_ADJUST=" + (-printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)|string %}
#        {% if paramList.append(temp) %}{% endif %}
#      {% endif %}
#    {% endfor %}
#    {% set rawparams=paramList|join(' ') %}
#    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE=0
#  {% endif %}
  SET_GCODE_OFFSET_ORIG { rawparams }



# This macro automates a lot of the frequency mapping process and simplifies the steps significantly.
[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28 X Y
  G90 # Abs positioning
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}
  PROBE_EDDY_CURRENT_CALIBRATE {rawparams}



#This macro is optional but useful if you want to run a rapid scan before each print. Simply uncomment it and add BED_MESH_SCAN to your print start code.
#[gcode_macro BED_MESH_CALIBRATE]
#rename_existing: BTT_BED_MESH_CALIBRATE
#gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
#  BTT_BED_MESH_CALIBRATE METHOD=rapid_scan
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
#
#
[filament_motion_sensor my_sensor]
detection_length: 200
extruder: extruder
pause_on_runout: True
runout_gcode: M600
switch_pin: PB10

# Uncomment this if you are using Eddy as the probe AND the homing endstop
[safe_z_home]
home_xy_position: 110, 110 # Choose an X,Y position that is in the center of your bed. For a 300x300 machine that will be 150, 150. Use the same principle to calculate your bed center.
z_hop: 10
z_hop_speed: 25
speed: 200

[bed_mesh]
horizontal_move_z: 2
speed: 200
# For the mesh dimensions below, the coordinates need to be reachable by the center of the probe. To calculate coordinates that will work, use the formula below:
# mesh x min = position_min_x + greater_of (15mm or x_offset) <--- in this term, only consider the x offset if it is positive, ignore if negative.
# mesh y min = position_min_y + greater_of (15mm or y_offset) <--- in this term, only consider the y offset if it is positive, ignore if negative.
# mesh x max = position_max_x - greater_of (15mm or |x_offset|) <--- in this term, only consider the x offset if it is negative, ignore if positive.
# mesh y max = position_max_y - greater_of (15mm or |y_offset|) <--- in this term, only consider the y offset if it is negative, ignore if positive.
# Example: Consider that you have a 300 x 300 bed with the max x and y positions being 300 and the min being 0. Your probe offsets are -20 for X and 10 for Y
# For mesh x min we ignore the x offset term because it is negative. Therefore mesh x min = 15
# For mesh y min we do not ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y min = 15
# For mesh x max we do not ignore the x offset term because it is negative. It is also greater than 15. Therefore mesh x max = 280
# For mesh y max we ignore the y offset term because it is positive but it is less than 15 so we use 15. Therefore mesh y max = 285
# The final result would be mesh_min: 15, 15 mesh_max: 280, 285
mesh_min: 10, 10  # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
mesh_max: 220, 220 # modify these according to the above guide. If the probe cannot reach then you will get a klipper error when trying to scan a bed mesh.
probe_count: 9, 9
algorithm: bicubic
#scan_overshoot: 8  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.

# EXP1 / EXP2 () pins
[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC3, EXP1_3=PA4, EXP1_5=PA6, EXP1_7=PC4, EXP1_9=<GND>,
    EXP1_2=PC1, EXP1_4=PA5, EXP1_6=PA7, EXP1_8=PC5, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PB11, EXP2_5=PB0,  EXP2_7=PC10,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PA15, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>,
    # CR_EXP3 header
    CR_EXP3_1=<5V>,  CR_EXP3_3=PA4, CR_EXP3_5=PA6, CR_EXP3_7=<RST>, CR_EXP3_9=PC3,
    CR_EXP3_2=<GND>, CR_EXP3_4=PA5, CR_EXP3_6=PB0, CR_EXP3_8=PB11,  CR_EXP3_10=PC1


[display]
lcd_type: st7920
sid_pin: CR_EXP3_3
cs_pin: CR_EXP3_4
sclk_pin: CR_EXP3_5
encoder_pins: ^CR_EXP3_6, ^CR_EXP3_8
click_pin: ^!CR_EXP3_9


[output_pin beeper]
# pin: EXP1_2
pin: CR_EXP3_10

[gcode_arcs]

#[virtual_sdcard]
#path: ~/gcode_files

[bed_screws]
screw1: 32.5,32.5
screw2: 202.5,32.5
screw3: 202.5,203
screw4: 32.5,203

[screws_tilt_adjust]
# in nozzle's coords
screw1: 7.5,25
screw1_name: front left screw
screw2: 177.5,25
screw2_name: front right screw
screw3: 177.5,195.5
screw3_name: rear right screw
screw4: 7.5,195.5
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M3

#[neopixel my_neopixel]
#pin: PA2
#chain_count: 1

### ADXL345 auto resonance testing
[mcu rpi]
serial: /tmp/klipper_host_mcu

[temperature_sensor rpi]
sensor_type: temperature_host

[temperature_sensor mcu]
sensor_type: temperature_mcu

# [temperature_sensor mboard]
# sensor_type: BME280
# i2c_address: 118
# i2c_mcu: rpi
# i2c_bus: i2c.1
# i2c_speed: 400000

# [temperature_sensor psu]
# sensor_type: BME280
# i2c_address: 119
# i2c_mcu: rpi
# i2c_bus: i2c.1

#[gcode_macro QUERY_BME280]
#gcode:
#    {% set sensor = printer["bme280 enclosure_temp"] %}
#    {action_respond_info(
#        "Temperature: %.2f C\n"
#        "Pressure: %.2f hPa\n"
#        "Humidity: %.2f%%" % (
#            sensor.temperature,
#            sensor.pressure,
#            sensor.humidity))}
#
[output_pin lights]
pin: rpi:gpio21

[gcode_macro LED_ON]
gcode: SET_PIN PIN=lights VALUE=1

[gcode_macro LED_OFF]
gcode: SET_PIN PIN=lights VALUE=0

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    115,105,40

[input_shaper]
shaper_freq_x: 59.6
shaper_type_x: ei
shaper_freq_y: 37.2
shaper_type_y: mzv


[skew_correction]
# SET_SKEW XY=70.37,70.28,49.74 XZ=70.63,69.73,49.71 YZ=70.38,70.10,49.78

[exclude_object]

# mniejszy offset - wyżej dysza

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 0.590
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.035208, 0.026875, 0.012187, -0.004063, 0.052396
#*# 	0.050417, 0.021458, 0.007083, 0.004792, 0.033437
#*# 	-0.004583, -0.022396, -0.036042, -0.035521, -0.003854
#*# 	-0.063854, -0.053438, -0.029063, -0.026875, 0.006458
#*# 	0.007500, -0.082500, -0.035208, -0.011771, 0.040625
#*# tension = 0.2
#*# min_x = 35.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 35.0
#*# x_count = 5
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 220.0
#*#
#*# [bed_mesh magnetic]
#*# version = 1
#*# points =
#*# 	0.112500, 0.055000, 0.017500, 0.100000, 0.270000
#*# 	0.057500, 0.035000, 0.037500, 0.037500, 0.250000
#*# 	0.032500, 0.000000, 0.007500, 0.032500, 0.210000
#*# 	0.077500, 0.062500, 0.000000, 0.040000, 0.192500
#*# 	-0.345000, 0.032500, 0.015000, 0.050000, 0.177500
#*# tension = 0.2
#*# min_x = 0.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 0.0
#*# x_count = 5
#*# max_y = 214.0
#*# mesh_x_pps = 2
#*# max_x = 199.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.936
#*# pid_ki = 1.023
#*# pid_kd = 140.026
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 67.604
#*# pid_ki = 1.029
#*# pid_kd = 1110.400
#*#
#*# [probe_eddy_current btt_eddy]
#*# reg_drive_current = 15
#*# calibrate =
#*# 	0.050000:3288267.311,0.090000:3287492.670,0.130000:3286712.647,
#*# 	0.170000:3285907.786,0.210000:3285098.550,0.250000:3284245.849,
#*# 	0.290000:3283485.367,0.330000:3282715.037,0.370000:3281970.274,
#*# 	0.410000:3281259.377,0.450000:3280537.035,0.490000:3279799.696,
#*# 	0.530000:3279107.189,0.570000:3278404.008,0.610000:3277772.829,
#*# 	0.650000:3277060.924,0.690000:3276383.357,0.730000:3275713.245,
#*# 	0.770000:3275063.277,0.810000:3274400.300,0.850000:3273770.463,
#*# 	0.890000:3273189.375,0.930000:3272542.519,0.970000:3271998.009,
#*# 	1.010000:3271429.995,1.050000:3270914.124,1.090000:3270351.879,
#*# 	1.130000:3269841.501,1.170000:3269304.275,1.210000:3268755.811,
#*# 	1.250000:3268302.845,1.290000:3267789.751,1.330000:3267301.463,
#*# 	1.370000:3266868.912,1.410000:3266450.234,1.450000:3266034.651,
#*# 	1.490000:3265599.795,1.530000:3265199.388,1.570000:3264831.676,
#*# 	1.610000:3264464.088,1.650000:3264033.268,1.690000:3263626.581,
#*# 	1.730000:3263246.899,1.770000:3262831.228,1.810000:3262461.356,
#*# 	1.850000:3262035.688,1.890000:3261637.106,1.930000:3261289.375,
#*# 	1.970000:3260911.658,2.010000:3260540.469,2.050000:3260211.260,
#*# 	2.090000:3259860.438,2.130000:3259514.596,2.170000:3259182.179,
#*# 	2.210000:3258864.522,2.250000:3258576.904,2.290000:3258253.242,
#*# 	2.330000:3258004.471,2.370000:3257669.799,2.410000:3257380.451,
#*# 	2.450000:3257071.309,2.490000:3256769.570,2.530000:3256502.742,
#*# 	2.570000:3256204.970,2.610000:3255925.952,2.650000:3255606.668,
#*# 	2.690000:3255375.395,2.730000:3255091.723,2.770000:3254839.793,
#*# 	2.810000:3254615.551,2.850000:3254350.968,2.890000:3254093.753,
#*# 	2.930000:3253878.908,2.970000:3253628.708,3.010000:3253375.542,
#*# 	3.050000:3253160.968,3.090000:3252970.047,3.130000:3252712.857,
#*# 	3.170000:3252479.101,3.210000:3252306.601,3.250000:3252069.349,
#*# 	3.290000:3251886.826,3.330000:3251668.949,3.370000:3251470.339,
#*# 	3.410000:3251296.295,3.450000:3251127.786,3.490000:3250887.786,
#*# 	3.530000:3250690.432,3.570000:3250501.200,3.610000:3250276.793,
#*# 	3.650000:3250101.447,3.690000:3249921.168,3.730000:3249724.129,
#*# 	3.770000:3249516.741,3.810000:3249341.862,3.850000:3249166.238,
#*# 	3.890000:3248977.419,3.930000:3248818.828,3.970000:3248670.972,
#*# 	4.010000:3248532.588,4.050000:3248370.625
#*#
#*# [temperature_probe btt_eddy]
#*# calibration_temp = 37.001942
